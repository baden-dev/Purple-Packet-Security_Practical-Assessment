{"ast":null,"code":"var _jsxFileName = \"/home/baden/Desktop/test_mongo/client/src/components/SoftwarePage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport apis from '../api/index';\nimport '../css/AgentsPageCss/SoftwarePage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SoftwareTable() {\n  _s();\n  const [software, setSoftwares] = useState([]);\n  useEffect(() => {\n    const fetchSoftwares = async () => {\n      try {\n        const response = await apis.getAllSoftware();\n        setSoftwares(response.data);\n      } catch (error) {\n        console.error('Error fetching agents:', error);\n      }\n    };\n    fetchSoftwares();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Software Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n_s(SoftwareTable, \"6cf6J5+pET/67xrWNkTEVnhTrr8=\");\n_c = SoftwareTable;\nexport default SoftwareTable;\nvar _c;\n$RefreshReg$(_c, \"SoftwareTable\");","map":{"version":3,"names":["React","useEffect","useState","apis","jsxDEV","_jsxDEV","SoftwareTable","_s","software","setSoftwares","fetchSoftwares","response","getAllSoftware","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/baden/Desktop/test_mongo/client/src/components/SoftwarePage.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport apis from '../api/index';\nimport '../css/AgentsPageCss/SoftwarePage.css';\n\nfunction SoftwareTable(){\n    const [software, setSoftwares] = useState([])\n\n    useEffect(() => {\n        const fetchSoftwares = async () => {\n        try {\n            const response = await apis.getAllSoftware();\n            setSoftwares(response.data); \n        } catch (error) {\n            console.error('Error fetching agents:', error);\n        }\n        };\n\n        fetchSoftwares();\n    }, []);\n\n    return (\n        <div>\n            <p>Software Page</p>\n        </div>\n    );\n}\n\nexport default SoftwareTable;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAO,uCAAuC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,aAAaA,CAAA,EAAE;EAAAC,EAAA;EACpB,MAAM,CAACC,QAAQ,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE7CD,SAAS,CAAC,MAAM;IACZ,MAAMS,cAAc,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMR,IAAI,CAACS,cAAc,CAAC,CAAC;QAC5CH,YAAY,CAACE,QAAQ,CAACE,IAAI,CAAC;MAC/B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAClD;IACA,CAAC;IAEDJ,cAAc,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIL,OAAA;IAAAW,QAAA,eACIX,OAAA;MAAAW,QAAA,EAAG;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnB,CAAC;AAEd;AAACb,EAAA,CArBQD,aAAa;AAAAe,EAAA,GAAbf,aAAa;AAuBtB,eAAeA,aAAa;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}