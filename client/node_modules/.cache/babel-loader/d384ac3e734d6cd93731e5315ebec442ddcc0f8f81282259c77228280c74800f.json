{"ast":null,"code":"var _jsxFileName = \"/home/baden/Desktop/test_mongo/client/src/components/HardwarePage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport apis from '../api/index';\nimport '../css/Tables.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction HardwareTable() {\n  _s();\n  const [hardware, setHardwares] = useState([]);\n  useEffect(() => {\n    const fetchHardwares = async () => {\n      try {\n        const response = await apis.getAllHardware();\n        setHardwares(response.data);\n      } catch (error) {\n        console.error('Error fetching agents:', error);\n      }\n    };\n    fetchHardwares();\n  }, []);\n  const [expandedItem, setExpandedItem] = useState(null);\n  const handleExpand = itemId => {\n    if (expandedItem === itemId) {\n      setExpandedItem(null);\n    } else {\n      setExpandedItem(itemId);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Hardware Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table-tag\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Agent ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"CPU Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Cores\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: hardware.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.agent_id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.cpu.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.cpu.cores\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              children: formatTime(item.scan.time)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 19\n          }, this)]\n        }, item._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n_s(HardwareTable, \"eySFmMMPqrBEKfc4TIP6xO1K5Bo=\");\n_c = HardwareTable;\nfunction formatTime(time) {\n  const options = {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n    hour: 'numeric',\n    minute: 'numeric',\n    second: 'numeric',\n    timeZone: 'UTC'\n  };\n  const formattedTime = new Date(time).toLocaleString('en-US', options);\n  return formattedTime;\n}\nexport default HardwareTable;\nvar _c;\n$RefreshReg$(_c, \"HardwareTable\");","map":{"version":3,"names":["React","useEffect","useState","apis","jsxDEV","_jsxDEV","HardwareTable","_s","hardware","setHardwares","fetchHardwares","response","getAllHardware","data","error","console","expandedItem","setExpandedItem","handleExpand","itemId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","agent_id","cpu","name","cores","formatTime","scan","time","_id","_c","options","year","month","day","hour","minute","second","timeZone","formattedTime","Date","toLocaleString","$RefreshReg$"],"sources":["/home/baden/Desktop/test_mongo/client/src/components/HardwarePage.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport apis from '../api/index';\nimport '../css/Tables.css';\n\nfunction HardwareTable(){\n    const [hardware, setHardwares] = useState([])\n\n    useEffect(() => {\n        const fetchHardwares = async () => {\n        try {\n            const response = await apis.getAllHardware();\n            setHardwares(response.data); \n        } catch (error) {\n            console.error('Error fetching agents:', error);\n        }\n        };\n\n        fetchHardwares();\n    }, []);\n\n    const [expandedItem, setExpandedItem] = useState(null);\n\n  const handleExpand = (itemId) => {\n    if (expandedItem === itemId) {\n      setExpandedItem(null);\n    } else {\n      setExpandedItem(itemId);\n    }\n  };\n\n\n    return (\n        <div className=\"table-container\">\n          <p>Hardware Page</p>\n          <table className=\"table-tag\">\n            <thead>\n              <tr>\n                <th>Agent ID</th>\n                <th>CPU Name</th>\n                <th>Cores</th>\n                <th>Time</th>\n              </tr>\n            </thead>\n            <tbody>\n              {hardware.map((item) => (\n                <tr key={item._id}>\n                  <td>{item.agent_id}</td>\n                  <td>{item.cpu.name}</td>\n                  <td>{item.cpu.cores}</td>\n                  <td><td>{formatTime(item.scan.time)}</td></td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      );\n\n}\n\nfunction formatTime(time) {\n    const options = {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      hour: 'numeric',\n      minute: 'numeric',\n      second: 'numeric',\n      timeZone: 'UTC',\n    };\n  \n    const formattedTime = new Date(time).toLocaleString('en-US', options);\n    return formattedTime;\n}\n\nexport default HardwareTable;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}