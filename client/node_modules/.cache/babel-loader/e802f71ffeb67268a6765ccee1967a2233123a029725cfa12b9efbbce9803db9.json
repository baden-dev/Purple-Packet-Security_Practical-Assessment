{"ast":null,"code":"var _jsxFileName = \"/home/baden/Desktop/test_mongo/client/src/components/AgentPage/AgentsTable.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport apis from '../../api/index';\nimport '../../css/AgentsPageCss/AgentsTable.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AgentsTable() {\n  _s();\n  const [agents, setAgents] = useState([]);\n  useEffect(() => {\n    const fetchAgents = async () => {\n      try {\n        const response = await apis.getAllAgents();\n        setAgents(response.data);\n      } catch (error) {\n        console.error('Error fetching agents:', error);\n      }\n    };\n    fetchAgents();\n  }, []);\n  const getStatusColor = status => {\n    switch (status) {\n      case \"active\":\n        return \"green\";\n      case \"disconnected\":\n        return \"red\";\n      case \"pending\":\n        return \"yellow\";\n      case \"never_connected\":\n        return \"gray\";\n      default:\n        return \"black\";\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"agents-table-container\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"agents-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"IP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Cluster Node\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Version\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: agents.map(agent => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: agent.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: `v${agent.name.major}${agent.name.minor}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: agent.ip\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: agent.node_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: agent.version\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              color: getStatusColor(agent.status)\n            },\n            children: agent.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)]\n        }, agent._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(AgentsTable, \"+GblVrslcY4TzRx2zoeLk69iwxw=\");\n_c = AgentsTable;\nexport default AgentsTable;\nvar _c;\n$RefreshReg$(_c, \"AgentsTable\");","map":{"version":3,"names":["React","useEffect","useState","apis","jsxDEV","_jsxDEV","AgentsTable","_s","agents","setAgents","fetchAgents","response","getAllAgents","data","error","console","getStatusColor","status","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","agent","id","name","major","minor","ip","node_name","version","style","color","_id","_c","$RefreshReg$"],"sources":["/home/baden/Desktop/test_mongo/client/src/components/AgentPage/AgentsTable.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport apis from '../../api/index';\nimport '../../css/AgentsPageCss/AgentsTable.css';\n\nfunction AgentsTable() {\n    const [agents, setAgents] = useState([])\n\n    useEffect(() => {\n        const fetchAgents = async () => {\n        try {\n            const response = await apis.getAllAgents();\n            setAgents(response.data); \n        } catch (error) {\n            console.error('Error fetching agents:', error);\n        }\n        };\n\n        fetchAgents();\n    }, []);\n\n    const getStatusColor = (status) => {\n        switch (status) {\n          case \"active\":\n            return \"green\";\n          case \"disconnected\":\n            return \"red\";\n          case \"pending\":\n            return \"yellow\";\n          case \"never_connected\":\n            return \"gray\";\n          default:\n            return \"black\";\n        }\n      };\n\n  return (\n    <div className=\"agents-table-container\">\n    <table className=\"agents-table\">\n      <thead>\n        <tr>\n          <th>ID</th>\n          <th>Name</th>\n          <th>IP</th>\n          <th>Cluster Node</th>\n          <th>Version</th>\n          <th>Status</th>\n        </tr>\n      </thead>\n      <tbody>\n        {agents.map((agent) => (\n          <tr key={agent._id}>\n            <td>{agent.id}</td>\n            <td>{`v${agent.name.major}${agent.name.minor}`}</td>\n            <td>{agent.ip}</td>\n            <td>{agent.node_name}</td>\n            <td>{agent.version}</td>\n            <td style={{ color: getStatusColor(agent.status) }}>{agent.status}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n    </div>\n  );\n}\n\nexport default AgentsTable;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,iBAAiB;AAClC,OAAO,yCAAyC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAExCD,SAAS,CAAC,MAAM;IACZ,MAAMS,WAAW,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMR,IAAI,CAACS,YAAY,CAAC,CAAC;QAC1CH,SAAS,CAACE,QAAQ,CAACE,IAAI,CAAC;MAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAClD;IACA,CAAC;IAEDJ,WAAW,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,cAAc,GAAIC,MAAM,IAAK;IAC/B,QAAQA,MAAM;MACZ,KAAK,QAAQ;QACX,OAAO,OAAO;MAChB,KAAK,cAAc;QACjB,OAAO,KAAK;MACd,KAAK,SAAS;QACZ,OAAO,QAAQ;MACjB,KAAK,iBAAiB;QACpB,OAAO,MAAM;MACf;QACE,OAAO,OAAO;IAClB;EACF,CAAC;EAEL,oBACEZ,OAAA;IAAKa,SAAS,EAAC,wBAAwB;IAAAC,QAAA,eACvCd,OAAA;MAAOa,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC7Bd,OAAA;QAAAc,QAAA,eACEd,OAAA;UAAAc,QAAA,gBACEd,OAAA;YAAAc,QAAA,EAAI;UAAE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACXlB,OAAA;YAAAc,QAAA,EAAI;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACblB,OAAA;YAAAc,QAAA,EAAI;UAAE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACXlB,OAAA;YAAAc,QAAA,EAAI;UAAY;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACrBlB,OAAA;YAAAc,QAAA,EAAI;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAChBlB,OAAA;YAAAc,QAAA,EAAI;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACb;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACRlB,OAAA;QAAAc,QAAA,EACGX,MAAM,CAACgB,GAAG,CAAEC,KAAK,iBAChBpB,OAAA;UAAAc,QAAA,gBACEd,OAAA;YAAAc,QAAA,EAAKM,KAAK,CAACC;UAAE;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACnBlB,OAAA;YAAAc,QAAA,EAAM,IAAGM,KAAK,CAACE,IAAI,CAACC,KAAM,GAAEH,KAAK,CAACE,IAAI,CAACE,KAAM;UAAC;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACpDlB,OAAA;YAAAc,QAAA,EAAKM,KAAK,CAACK;UAAE;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACnBlB,OAAA;YAAAc,QAAA,EAAKM,KAAK,CAACM;UAAS;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC1BlB,OAAA;YAAAc,QAAA,EAAKM,KAAK,CAACO;UAAO;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACxBlB,OAAA;YAAI4B,KAAK,EAAE;cAAEC,KAAK,EAAElB,cAAc,CAACS,KAAK,CAACR,MAAM;YAAE,CAAE;YAAAE,QAAA,EAAEM,KAAK,CAACR;UAAM;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA,GANhEE,KAAK,CAACU,GAAG;UAAAf,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAOd,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAChB,EAAA,CA3DQD,WAAW;AAAA8B,EAAA,GAAX9B,WAAW;AA6DpB,eAAeA,WAAW;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}