{"ast":null,"code":"var _jsxFileName = \"/home/baden/Desktop/test_mongo/client/src/components/AgentPage/AgentsTable.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport apis from '../../api/index';\nimport '../../css/AgentsPageCss/AgentsTable.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AgentsTable() {\n  _s();\n  const [agents, setAgents] = useState([]);\n  useEffect(() => {\n    const fetchAgents = async () => {\n      try {\n        const response = await apis.getAllAgents();\n        setAgents(response.data);\n      } catch (error) {\n        console.error('Error fetching agents:', error);\n      }\n    };\n    fetchAgents();\n  }, []);\n  const getStatusColor = status => {\n    switch (status) {\n      case \"active\":\n        return \"green\";\n      case \"disconnected\":\n        return \"red\";\n      case \"pending\":\n        return \"yellow\";\n      case \"never_connected\":\n        return \"gray\";\n      default:\n        return \"black\";\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"IP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Cluster Node\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Version\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: agents.map(agent => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: agent.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: `v${agent.name.major}${agent.name.minor}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: agent.ip\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: agent.node_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: agent.version\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          style: {\n            color: getStatusColor(agent.status)\n          },\n          children: agent.status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)]\n      }, agent._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(AgentsTable, \"+GblVrslcY4TzRx2zoeLk69iwxw=\");\n_c = AgentsTable;\nexport default AgentsTable;\nvar _c;\n$RefreshReg$(_c, \"AgentsTable\");","map":{"version":3,"names":["React","useEffect","useState","apis","jsxDEV","_jsxDEV","AgentsTable","_s","agents","setAgents","fetchAgents","response","getAllAgents","data","error","console","getStatusColor","status","children","fileName","_jsxFileName","lineNumber","columnNumber","map","agent","id","name","major","minor","ip","node_name","version","style","color","_id","_c","$RefreshReg$"],"sources":["/home/baden/Desktop/test_mongo/client/src/components/AgentPage/AgentsTable.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport apis from '../../api/index';\nimport '../../css/AgentsPageCss/AgentsTable.css';\n\nfunction AgentsTable() {\n    const [agents, setAgents] = useState([])\n\n    useEffect(() => {\n        const fetchAgents = async () => {\n        try {\n            const response = await apis.getAllAgents();\n            setAgents(response.data); \n        } catch (error) {\n            console.error('Error fetching agents:', error);\n        }\n        };\n\n        fetchAgents();\n    }, []);\n\n    const getStatusColor = (status) => {\n        switch (status) {\n          case \"active\":\n            return \"green\";\n          case \"disconnected\":\n            return \"red\";\n          case \"pending\":\n            return \"yellow\";\n          case \"never_connected\":\n            return \"gray\";\n          default:\n            return \"black\";\n        }\n      };\n\n  return (\n    <table>\n      <thead>\n        <tr>\n          <th>ID</th>\n          <th>Name</th>\n          <th>IP</th>\n          <th>Cluster Node</th>\n          <th>Version</th>\n          <th>Status</th>\n        </tr>\n      </thead>\n      <tbody>\n        {agents.map((agent) => (\n          <tr key={agent._id}>\n            <td>{agent.id}</td>\n            <td>{`v${agent.name.major}${agent.name.minor}`}</td>\n            <td>{agent.ip}</td>\n            <td>{agent.node_name}</td>\n            <td>{agent.version}</td>\n            <td style={{ color: getStatusColor(agent.status) }}>{agent.status}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\n\nexport default AgentsTable;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,iBAAiB;AAClC,OAAO,yCAAyC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAExCD,SAAS,CAAC,MAAM;IACZ,MAAMS,WAAW,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMR,IAAI,CAACS,YAAY,CAAC,CAAC;QAC1CH,SAAS,CAACE,QAAQ,CAACE,IAAI,CAAC;MAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAClD;IACA,CAAC;IAEDJ,WAAW,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,cAAc,GAAIC,MAAM,IAAK;IAC/B,QAAQA,MAAM;MACZ,KAAK,QAAQ;QACX,OAAO,OAAO;MAChB,KAAK,cAAc;QACjB,OAAO,KAAK;MACd,KAAK,SAAS;QACZ,OAAO,QAAQ;MACjB,KAAK,iBAAiB;QACpB,OAAO,MAAM;MACf;QACE,OAAO,OAAO;IAClB;EACF,CAAC;EAEL,oBACEZ,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAAa,QAAA,eACEb,OAAA;QAAAa,QAAA,gBACEb,OAAA;UAAAa,QAAA,EAAI;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACXjB,OAAA;UAAAa,QAAA,EAAI;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACbjB,OAAA;UAAAa,QAAA,EAAI;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACXjB,OAAA;UAAAa,QAAA,EAAI;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACrBjB,OAAA;UAAAa,QAAA,EAAI;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAChBjB,OAAA;UAAAa,QAAA,EAAI;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACb;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACRjB,OAAA;MAAAa,QAAA,EACGV,MAAM,CAACe,GAAG,CAAEC,KAAK,iBAChBnB,OAAA;QAAAa,QAAA,gBACEb,OAAA;UAAAa,QAAA,EAAKM,KAAK,CAACC;QAAE;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACnBjB,OAAA;UAAAa,QAAA,EAAM,IAAGM,KAAK,CAACE,IAAI,CAACC,KAAM,GAAEH,KAAK,CAACE,IAAI,CAACE,KAAM;QAAC;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACpDjB,OAAA;UAAAa,QAAA,EAAKM,KAAK,CAACK;QAAE;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACnBjB,OAAA;UAAAa,QAAA,EAAKM,KAAK,CAACM;QAAS;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC1BjB,OAAA;UAAAa,QAAA,EAAKM,KAAK,CAACO;QAAO;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACxBjB,OAAA;UAAI2B,KAAK,EAAE;YAAEC,KAAK,EAAEjB,cAAc,CAACQ,KAAK,CAACP,MAAM;UAAE,CAAE;UAAAC,QAAA,EAAEM,KAAK,CAACP;QAAM;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA,GANhEE,KAAK,CAACU,GAAG;QAAAf,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOd,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEZ;AAACf,EAAA,CAzDQD,WAAW;AAAA6B,EAAA,GAAX7B,WAAW;AA2DpB,eAAeA,WAAW;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}