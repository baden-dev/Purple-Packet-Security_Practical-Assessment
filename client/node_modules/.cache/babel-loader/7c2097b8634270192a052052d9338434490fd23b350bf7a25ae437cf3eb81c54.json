{"ast":null,"code":"var _jsxFileName = \"/home/baden/Desktop/test_mongo/client/src/components/HardwarePage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport apis from '../api/index';\nimport '../css/HardwarePage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction HardwareTable() {\n  _s();\n  const [hardware, setHardwares] = useState([]);\n  useEffect(() => {\n    const fetchHardwares = async () => {\n      try {\n        const response = await apis.getAllHardware();\n        setHardwares(response.data);\n      } catch (error) {\n        console.error('Error fetching agents:', error);\n      }\n    };\n    fetchHardwares();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Hardware Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Agent ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"CPU Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Cores\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: hardware.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.agent_id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.cpu.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.cpu.cores\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.scan.time\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 19\n          }, this)]\n        }, item._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n_s(HardwareTable, \"BTiRTRwgCf30aJcSIYmXHPZci3g=\");\n_c = HardwareTable;\nexport default HardwareTable;\nvar _c;\n$RefreshReg$(_c, \"HardwareTable\");","map":{"version":3,"names":["React","useEffect","useState","apis","jsxDEV","_jsxDEV","HardwareTable","_s","hardware","setHardwares","fetchHardwares","response","getAllHardware","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","agent_id","cpu","name","cores","scan","time","_id","_c","$RefreshReg$"],"sources":["/home/baden/Desktop/test_mongo/client/src/components/HardwarePage.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport apis from '../api/index';\nimport '../css/HardwarePage.css';\n\nfunction HardwareTable(){\n    const [hardware, setHardwares] = useState([])\n\n    useEffect(() => {\n        const fetchHardwares = async () => {\n        try {\n            const response = await apis.getAllHardware();\n            setHardwares(response.data); \n        } catch (error) {\n            console.error('Error fetching agents:', error);\n        }\n        };\n\n        fetchHardwares();\n    }, []);\n\n    return (\n        <div>\n          <p>Hardware Page</p>\n          <table>\n            <thead>\n              <tr>\n                <th>Agent ID</th>\n                <th>CPU Name</th>\n                <th>Cores</th>\n                <th>Time</th>\n              </tr>\n            </thead>\n            <tbody>\n              {hardware.map((item) => (\n                <tr key={item._id}>\n                  <td>{item.agent_id}</td>\n                  <td>{item.cpu.name}</td>\n                  <td>{item.cpu.cores}</td>\n                  <td>{item.scan.time}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      );\n\n}\n\nexport default HardwareTable;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}